smart.framework.jdbc.driver=com.mysql.jdbc.Driver
smart.framework.jdbc.url=jdbc:mysql://localhost:3306/custom_java_web?useSSL=false
smart.framework.jdbc.username=root
smart.framework.jdbc.password=123456

smart.framework.app.base_package=com.lin
smart.framework.app.jsp_path=/WEB-INF/view/
smart.framework.app.asset_path=/asset/
smart.framework.app.upload_limit=2


# 安全认证配置（模仿shiro）
# 在代码中实现SmartSecurity接口进行配置查询sql
smart.plugin.security.realms=custom
smart.plugin.security.custom.class="com.lin.framework.plugin.security.AppSecurity"

## 安全认证配置（模仿shiro）
# 直接在properties进行配置查询sql
#smart.plugin.security.realms=jdbc
## 根据用户名获取密码
#smart.plugin.security.jdbc.authc_query="select password from user where useranme = ?"
## 根据用户名获取角色名集合
#smart.plugin.security.jdbc.roles_query="select r.role_name from user u, user_role ur, role r where u.id = ur.user_id and r.id = ur.role_id and usernaem = ?"
## 根据角色名获取权限名集合
#smart.plugin.security.jdbc.permissions_query="select p.permission_name from role r, role_permission rp, permission p where r.id = rp.role_id and p.id = rp.permission_id and r.role_name = ?"

# 是否进行缓存
smart.plugin.security.cache=true

# 是否记录SOAP日志
smart.plugin.soap.log=true

# 是否开启REST日志记录
smart.plugin.rest.log=true

# 是否开启JSONP
smart.plugin.rest.jsonp=true
smart.plugin.rest.jsonp.function=

# 是否开启CORS
smart.plugin.rest.cors=true
smart.plugin.rest.cors.origin=